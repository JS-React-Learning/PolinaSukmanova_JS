# .github/workflows/project-inprogress.yml
name: 'Project: set In progress on PR'

on:
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  to-in-progress:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: read
      issues: read
    steps:
      - name: Add PR to org Project v2 and set Status=In progress
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.ORG_PROJECTS_TOKEN }}
          script: |
            const ORG = "JS-React-Learning";
            const PROJECT_NUMBER = 1; // твоя доска по URL
            const pr = context.payload.pull_request;
            if (!pr) { core.info("No PR in context"); return; }
            const contentId = pr.node_id;

            // 1) Получаем проект, поле Status и опцию "In progress"
            const projRes = await github.graphql(`
              query($org:String!, $number:Int!) {
                organization(login:$org) {
                  projectV2(number:$number) {
                    id
                    fields(first:50) {
                      nodes {
                        __typename
                        ... on ProjectV2Field { id name }
                        ... on ProjectV2SingleSelectField { id name options { id name } }
                      }
                    }
                  }
                }
              }
            `, { org: ORG, number: PROJECT_NUMBER });

            const project = projRes.organization?.projectV2;
            if (!project) { core.setFailed("Project v2 not found"); return; }

            const statusField = project.fields.nodes.find(f => f.name === "Status" && f.__typename === "ProjectV2SingleSelectField");
            if (!statusField) { core.setFailed('Field "Status" not found or not single-select'); return; }

            const inProgress = statusField.options.find(o => o.name.toLowerCase() === "in progress");
            if (!inProgress) { core.setFailed('Option "In progress" not found in Status field'); return; }

            // 2) Добавляем PR в проект (если уже добавлен — просто игнорируем ошибку)
            let itemId;
            try {
              const addRes = await github.graphql(`
                mutation($projectId:ID!, $contentId:ID!) {
                  addProjectV2ItemById(input:{projectId:$projectId, contentId:$contentId}) {
                    item { id }
                  }
                }
              `, { projectId: project.id, contentId });
              itemId = addRes.addProjectV2ItemById.item.id;
            } catch (e) {
              core.info("Item may already exist, trying to locate it…");
              // Пытаемся пробежаться по последним items (простая эвристика)
              const itemsRes = await github.graphql(`
                query($projectId:ID!) {
                  node(id:$projectId) {
                    ... on ProjectV2 {
                      items(first:50) { nodes { id, content { __typename ... on PullRequest { id } } } }
                    }
                  }
                }
              `, { projectId: project.id });
              const node = itemsRes.node;
              const found = node.items.nodes.find(n => n.content?.__typename === "PullRequest" && n.content.id === contentId);
              if (!found) { core.setFailed("Project item not found after add attempt"); return; }
              itemId = found.id;
            }

            // 3) Ставим Status = In progress
            await github.graphql(`
              mutation($projectId:ID!, $itemId:ID!, $fieldId:ID!, $optionId:String!) {
                updateProjectV2ItemFieldValue(input:{
                  projectId:$projectId,
                  itemId:$itemId,
                  fieldId:$fieldId,
                  value:{ singleSelectOptionId:$optionId }
                }) {
                  projectV2Item { id }
                }
              }
            `, {
              projectId: project.id,
              itemId,
              fieldId: statusField.id,
              optionId: inProgress.id
            });

            core.info("Marked PR as In progress in Project");
